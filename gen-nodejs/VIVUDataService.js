//
// Autogenerated by Thrift Compiler (0.9.3)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var geo_ttypes = require('./geo_types')
var exception_ttypes = require('./exception_types')
var client_id_ttypes = require('./client_id_types')
var access_token_ttypes = require('./access_token_types')
var customer_ttypes = require('./customer_types')
var customer_address_ttypes = require('./customer_address_types')
var options_ttypes = require('./options_types')
var country_ttypes = require('./country_types')
var product_ttypes = require('./product_types')
var product_color_ttypes = require('./product_color_types')
var product_color_preview_image_ttypes = require('./product_color_preview_image_types')
var category_ttypes = require('./category_types')
var category_group_ttypes = require('./category_group_types')
var pagination_ttypes = require('./pagination_types')


var ttypes = require('./service_types');
//HELPER FUNCTIONS AND STRUCTURES

vv.service.VIVUDataService_commonGenerateUid_args = function(args) {
};
vv.service.VIVUDataService_commonGenerateUid_args.prototype = {};
vv.service.VIVUDataService_commonGenerateUid_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_commonGenerateUid_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_commonGenerateUid_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_commonGenerateUid_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_commonGenerateUid_result.prototype = {};
vv.service.VIVUDataService_commonGenerateUid_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_commonGenerateUid_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_commonGenerateUid_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_clientIdInsertOne_args = function(args) {
  this.model = null;
  if (args) {
    if (args.model !== undefined && args.model !== null) {
      this.model = new client_id_ttypes.ClientIdInsert(args.model);
    }
  }
};
vv.service.VIVUDataService_clientIdInsertOne_args.prototype = {};
vv.service.VIVUDataService_clientIdInsertOne_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.model = new client_id_ttypes.ClientIdInsert();
        this.model.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_clientIdInsertOne_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_clientIdInsertOne_args');
  if (this.model !== null && this.model !== undefined) {
    output.writeFieldBegin('model', Thrift.Type.STRUCT, 1);
    this.model.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_clientIdInsertOne_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new client_id_ttypes.ClientId(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_clientIdInsertOne_result.prototype = {};
vv.service.VIVUDataService_clientIdInsertOne_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new client_id_ttypes.ClientId();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_clientIdInsertOne_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_clientIdInsertOne_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_clientIdGetOne_args = function(args) {
  this.query = null;
  if (args) {
    if (args.query !== undefined && args.query !== null) {
      this.query = new client_id_ttypes.ClientIdQuery(args.query);
    }
  }
};
vv.service.VIVUDataService_clientIdGetOne_args.prototype = {};
vv.service.VIVUDataService_clientIdGetOne_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.query = new client_id_ttypes.ClientIdQuery();
        this.query.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_clientIdGetOne_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_clientIdGetOne_args');
  if (this.query !== null && this.query !== undefined) {
    output.writeFieldBegin('query', Thrift.Type.STRUCT, 1);
    this.query.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_clientIdGetOne_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new client_id_ttypes.ClientId(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_clientIdGetOne_result.prototype = {};
vv.service.VIVUDataService_clientIdGetOne_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new client_id_ttypes.ClientId();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_clientIdGetOne_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_clientIdGetOne_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenInsertOne_args = function(args) {
  this.form = null;
  if (args) {
    if (args.form !== undefined && args.form !== null) {
      this.form = new access_token_ttypes.AccessTokenInsert(args.form);
    }
  }
};
vv.service.VIVUDataService_accessTokenInsertOne_args.prototype = {};
vv.service.VIVUDataService_accessTokenInsertOne_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.form = new access_token_ttypes.AccessTokenInsert();
        this.form.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenInsertOne_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenInsertOne_args');
  if (this.form !== null && this.form !== undefined) {
    output.writeFieldBegin('form', Thrift.Type.STRUCT, 1);
    this.form.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenInsertOne_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new access_token_ttypes.AccessToken(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_accessTokenInsertOne_result.prototype = {};
vv.service.VIVUDataService_accessTokenInsertOne_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new access_token_ttypes.AccessToken();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenInsertOne_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenInsertOne_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenUpdateOne_args = function(args) {
  this.form = null;
  this.query = null;
  if (args) {
    if (args.form !== undefined && args.form !== null) {
      this.form = new access_token_ttypes.AccessTokenForm(args.form);
    }
    if (args.query !== undefined && args.query !== null) {
      this.query = new access_token_ttypes.AccessTokenQuery(args.query);
    }
  }
};
vv.service.VIVUDataService_accessTokenUpdateOne_args.prototype = {};
vv.service.VIVUDataService_accessTokenUpdateOne_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.form = new access_token_ttypes.AccessTokenForm();
        this.form.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.query = new access_token_ttypes.AccessTokenQuery();
        this.query.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenUpdateOne_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenUpdateOne_args');
  if (this.form !== null && this.form !== undefined) {
    output.writeFieldBegin('form', Thrift.Type.STRUCT, 1);
    this.form.write(output);
    output.writeFieldEnd();
  }
  if (this.query !== null && this.query !== undefined) {
    output.writeFieldBegin('query', Thrift.Type.STRUCT, 2);
    this.query.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenUpdateOne_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_accessTokenUpdateOne_result.prototype = {};
vv.service.VIVUDataService_accessTokenUpdateOne_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenUpdateOne_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenUpdateOne_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenUpsertOne_args = function(args) {
  this.form = null;
  if (args) {
    if (args.form !== undefined && args.form !== null) {
      this.form = new access_token_ttypes.AccessTokenInsert(args.form);
    }
  }
};
vv.service.VIVUDataService_accessTokenUpsertOne_args.prototype = {};
vv.service.VIVUDataService_accessTokenUpsertOne_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.form = new access_token_ttypes.AccessTokenInsert();
        this.form.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenUpsertOne_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenUpsertOne_args');
  if (this.form !== null && this.form !== undefined) {
    output.writeFieldBegin('form', Thrift.Type.STRUCT, 1);
    this.form.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenUpsertOne_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new access_token_ttypes.AccessToken(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_accessTokenUpsertOne_result.prototype = {};
vv.service.VIVUDataService_accessTokenUpsertOne_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new access_token_ttypes.AccessToken();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenUpsertOne_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenUpsertOne_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenGetOne_args = function(args) {
  this.query = null;
  if (args) {
    if (args.query !== undefined && args.query !== null) {
      this.query = new access_token_ttypes.AccessTokenQuery(args.query);
    }
  }
};
vv.service.VIVUDataService_accessTokenGetOne_args.prototype = {};
vv.service.VIVUDataService_accessTokenGetOne_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.query = new access_token_ttypes.AccessTokenQuery();
        this.query.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenGetOne_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenGetOne_args');
  if (this.query !== null && this.query !== undefined) {
    output.writeFieldBegin('query', Thrift.Type.STRUCT, 1);
    this.query.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenGetOne_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new access_token_ttypes.AccessToken(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_accessTokenGetOne_result.prototype = {};
vv.service.VIVUDataService_accessTokenGetOne_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new access_token_ttypes.AccessToken();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenGetOne_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenGetOne_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenDeleteOne_args = function(args) {
  this.query = null;
  if (args) {
    if (args.query !== undefined && args.query !== null) {
      this.query = new access_token_ttypes.AccessTokenQuery(args.query);
    }
  }
};
vv.service.VIVUDataService_accessTokenDeleteOne_args.prototype = {};
vv.service.VIVUDataService_accessTokenDeleteOne_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.query = new access_token_ttypes.AccessTokenQuery();
        this.query.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenDeleteOne_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenDeleteOne_args');
  if (this.query !== null && this.query !== undefined) {
    output.writeFieldBegin('query', Thrift.Type.STRUCT, 1);
    this.query.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenDeleteOne_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_accessTokenDeleteOne_result.prototype = {};
vv.service.VIVUDataService_accessTokenDeleteOne_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenDeleteOne_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenDeleteOne_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenDeleteMany_args = function(args) {
  this.query = null;
  if (args) {
    if (args.query !== undefined && args.query !== null) {
      this.query = new access_token_ttypes.AccessTokenQuery(args.query);
    }
  }
};
vv.service.VIVUDataService_accessTokenDeleteMany_args.prototype = {};
vv.service.VIVUDataService_accessTokenDeleteMany_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.query = new access_token_ttypes.AccessTokenQuery();
        this.query.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenDeleteMany_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenDeleteMany_args');
  if (this.query !== null && this.query !== undefined) {
    output.writeFieldBegin('query', Thrift.Type.STRUCT, 1);
    this.query.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenDeleteMany_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_accessTokenDeleteMany_result.prototype = {};
vv.service.VIVUDataService_accessTokenDeleteMany_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_accessTokenDeleteMany_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_accessTokenDeleteMany_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerInsertOne_args = function(args) {
  this.form = null;
  if (args) {
    if (args.form !== undefined && args.form !== null) {
      this.form = new customer_ttypes.CustomerInsert(args.form);
    }
  }
};
vv.service.VIVUDataService_customerInsertOne_args.prototype = {};
vv.service.VIVUDataService_customerInsertOne_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.form = new customer_ttypes.CustomerInsert();
        this.form.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerInsertOne_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerInsertOne_args');
  if (this.form !== null && this.form !== undefined) {
    output.writeFieldBegin('form', Thrift.Type.STRUCT, 1);
    this.form.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerInsertOne_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new customer_ttypes.Customer(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_customerInsertOne_result.prototype = {};
vv.service.VIVUDataService_customerInsertOne_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new customer_ttypes.Customer();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerInsertOne_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerInsertOne_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneByPk_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
vv.service.VIVUDataService_customerGetOneByPk_args.prototype = {};
vv.service.VIVUDataService_customerGetOneByPk_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.userId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneByPk_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerGetOneByPk_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I32, 1);
    output.writeI32(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneByPk_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new customer_ttypes.Customer(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_customerGetOneByPk_result.prototype = {};
vv.service.VIVUDataService_customerGetOneByPk_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new customer_ttypes.Customer();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneByPk_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerGetOneByPk_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneRelationByPk_args = function(args) {
  this.userId = null;
  this.options = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.options !== undefined && args.options !== null) {
      this.options = new options_ttypes.SelectOptions(args.options);
    }
  }
};
vv.service.VIVUDataService_customerGetOneRelationByPk_args.prototype = {};
vv.service.VIVUDataService_customerGetOneRelationByPk_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.userId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.options = new options_ttypes.SelectOptions();
        this.options.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneRelationByPk_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerGetOneRelationByPk_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I32, 1);
    output.writeI32(this.userId);
    output.writeFieldEnd();
  }
  if (this.options !== null && this.options !== undefined) {
    output.writeFieldBegin('options', Thrift.Type.STRUCT, 2);
    this.options.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneRelationByPk_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new customer_ttypes.Customer(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_customerGetOneRelationByPk_result.prototype = {};
vv.service.VIVUDataService_customerGetOneRelationByPk_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new customer_ttypes.Customer();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneRelationByPk_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerGetOneRelationByPk_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneByEmail_args = function(args) {
  this.email = null;
  if (args) {
    if (args.email !== undefined && args.email !== null) {
      this.email = args.email;
    }
  }
};
vv.service.VIVUDataService_customerGetOneByEmail_args.prototype = {};
vv.service.VIVUDataService_customerGetOneByEmail_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.email = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneByEmail_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerGetOneByEmail_args');
  if (this.email !== null && this.email !== undefined) {
    output.writeFieldBegin('email', Thrift.Type.STRING, 1);
    output.writeString(this.email);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneByEmail_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new customer_ttypes.Customer(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_customerGetOneByEmail_result.prototype = {};
vv.service.VIVUDataService_customerGetOneByEmail_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new customer_ttypes.Customer();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerGetOneByEmail_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerGetOneByEmail_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerChangePassword_args = function(args) {
  this.uid = null;
  this.password = null;
  if (args) {
    if (args.uid !== undefined && args.uid !== null) {
      this.uid = args.uid;
    }
    if (args.password !== undefined && args.password !== null) {
      this.password = args.password;
    }
  }
};
vv.service.VIVUDataService_customerChangePassword_args.prototype = {};
vv.service.VIVUDataService_customerChangePassword_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.uid = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.password = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerChangePassword_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerChangePassword_args');
  if (this.uid !== null && this.uid !== undefined) {
    output.writeFieldBegin('uid', Thrift.Type.I32, 1);
    output.writeI32(this.uid);
    output.writeFieldEnd();
  }
  if (this.password !== null && this.password !== undefined) {
    output.writeFieldBegin('password', Thrift.Type.STRING, 2);
    output.writeString(this.password);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerChangePassword_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_customerChangePassword_result.prototype = {};
vv.service.VIVUDataService_customerChangePassword_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerChangePassword_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerChangePassword_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerAddressInsertOne_args = function(args) {
  this.form = null;
  if (args) {
    if (args.form !== undefined && args.form !== null) {
      this.form = new customer_address_ttypes.CustomerAddressInsert(args.form);
    }
  }
};
vv.service.VIVUDataService_customerAddressInsertOne_args.prototype = {};
vv.service.VIVUDataService_customerAddressInsertOne_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.form = new customer_address_ttypes.CustomerAddressInsert();
        this.form.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerAddressInsertOne_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerAddressInsertOne_args');
  if (this.form !== null && this.form !== undefined) {
    output.writeFieldBegin('form', Thrift.Type.STRUCT, 1);
    this.form.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_customerAddressInsertOne_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new customer_address_ttypes.CustomerAddress(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_customerAddressInsertOne_result.prototype = {};
vv.service.VIVUDataService_customerAddressInsertOne_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new customer_address_ttypes.CustomerAddress();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_customerAddressInsertOne_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_customerAddressInsertOne_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetAll_args = function(args) {
};
vv.service.VIVUDataService_countryGetAll_args.prototype = {};
vv.service.VIVUDataService_countryGetAll_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetAll_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_countryGetAll_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetAll_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [country_ttypes.CountryOption]);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_countryGetAll_result.prototype = {};
vv.service.VIVUDataService_countryGetAll_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.success = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new country_ttypes.CountryOption();
          elem6.read(input);
          this.success.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetAll_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_countryGetAll_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter7 in this.success)
    {
      if (this.success.hasOwnProperty(iter7))
      {
        iter7 = this.success[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetOneByCountryCode_args = function(args) {
  this.countryCode = null;
  if (args) {
    if (args.countryCode !== undefined && args.countryCode !== null) {
      this.countryCode = args.countryCode;
    }
  }
};
vv.service.VIVUDataService_countryGetOneByCountryCode_args.prototype = {};
vv.service.VIVUDataService_countryGetOneByCountryCode_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.countryCode = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetOneByCountryCode_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_countryGetOneByCountryCode_args');
  if (this.countryCode !== null && this.countryCode !== undefined) {
    output.writeFieldBegin('countryCode', Thrift.Type.STRING, 1);
    output.writeString(this.countryCode);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetOneByCountryCode_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new country_ttypes.CountryOption(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_countryGetOneByCountryCode_result.prototype = {};
vv.service.VIVUDataService_countryGetOneByCountryCode_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new country_ttypes.CountryOption();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetOneByCountryCode_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_countryGetOneByCountryCode_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetOne_args = function(args) {
  this.countryCode = null;
  if (args) {
    if (args.countryCode !== undefined && args.countryCode !== null) {
      this.countryCode = args.countryCode;
    }
  }
};
vv.service.VIVUDataService_countryGetOne_args.prototype = {};
vv.service.VIVUDataService_countryGetOne_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.countryCode = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetOne_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_countryGetOne_args');
  if (this.countryCode !== null && this.countryCode !== undefined) {
    output.writeFieldBegin('countryCode', Thrift.Type.STRING, 1);
    output.writeString(this.countryCode);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetOne_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new country_ttypes.CountryOption(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_countryGetOne_result.prototype = {};
vv.service.VIVUDataService_countryGetOne_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new country_ttypes.CountryOption();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_countryGetOne_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_countryGetOne_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_productFilterPagination_args = function(args) {
  this.filter = null;
  this.query = null;
  if (args) {
    if (args.filter !== undefined && args.filter !== null) {
      this.filter = new product_ttypes.ProductFilter(args.filter);
    }
    if (args.query !== undefined && args.query !== null) {
      this.query = new pagination_ttypes.PagingQuery(args.query);
    }
  }
};
vv.service.VIVUDataService_productFilterPagination_args.prototype = {};
vv.service.VIVUDataService_productFilterPagination_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.filter = new product_ttypes.ProductFilter();
        this.filter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.query = new pagination_ttypes.PagingQuery();
        this.query.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_productFilterPagination_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_productFilterPagination_args');
  if (this.filter !== null && this.filter !== undefined) {
    output.writeFieldBegin('filter', Thrift.Type.STRUCT, 1);
    this.filter.write(output);
    output.writeFieldEnd();
  }
  if (this.query !== null && this.query !== undefined) {
    output.writeFieldBegin('query', Thrift.Type.STRUCT, 2);
    this.query.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_productFilterPagination_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new product_ttypes.PaginationProduct(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_productFilterPagination_result.prototype = {};
vv.service.VIVUDataService_productFilterPagination_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new product_ttypes.PaginationProduct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_productFilterPagination_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_productFilterPagination_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_categoryGroupGetAllActive_args = function(args) {
};
vv.service.VIVUDataService_categoryGroupGetAllActive_args.prototype = {};
vv.service.VIVUDataService_categoryGroupGetAllActive_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_categoryGroupGetAllActive_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_categoryGroupGetAllActive_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_categoryGroupGetAllActive_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [category_group_ttypes.CategoryGroup]);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_categoryGroupGetAllActive_result.prototype = {};
vv.service.VIVUDataService_categoryGroupGetAllActive_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.success = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new category_group_ttypes.CategoryGroup();
          elem14.read(input);
          this.success.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_categoryGroupGetAllActive_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_categoryGroupGetAllActive_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter15 in this.success)
    {
      if (this.success.hasOwnProperty(iter15))
      {
        iter15 = this.success[iter15];
        iter15.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_categoryGetAllActive_args = function(args) {
};
vv.service.VIVUDataService_categoryGetAllActive_args.prototype = {};
vv.service.VIVUDataService_categoryGetAllActive_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_categoryGetAllActive_args.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_categoryGetAllActive_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataService_categoryGetAllActive_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof exception_ttypes.DBExceptions) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [category_ttypes.Category]);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
vv.service.VIVUDataService_categoryGetAllActive_result.prototype = {};
vv.service.VIVUDataService_categoryGetAllActive_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.success = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = new category_ttypes.Category();
          elem22.read(input);
          this.success.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new exception_ttypes.DBExceptions();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

vv.service.VIVUDataService_categoryGetAllActive_result.prototype.write = function(output) {
  output.writeStructBegin('VIVUDataService_categoryGetAllActive_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter23 in this.success)
    {
      if (this.success.hasOwnProperty(iter23))
      {
        iter23 = this.success[iter23];
        iter23.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

vv.service.VIVUDataServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
vv.service.VIVUDataServiceClient.prototype = {};
vv.service.VIVUDataServiceClient.prototype.seqid = function() { return this._seqid; }
vv.service.VIVUDataServiceClient.prototype.new_seqid = function() { return this._seqid += 1; }
vv.service.VIVUDataServiceClient.prototype.commonGenerateUid = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_commonGenerateUid();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_commonGenerateUid();
  }
};

vv.service.VIVUDataServiceClient.prototype.send_commonGenerateUid = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('commonGenerateUid', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_commonGenerateUid_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_commonGenerateUid = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_commonGenerateUid_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('commonGenerateUid failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.clientIdInsertOne = function(model, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_clientIdInsertOne(model);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_clientIdInsertOne(model);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_clientIdInsertOne = function(model) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('clientIdInsertOne', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_clientIdInsertOne_args();
  args.model = model;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_clientIdInsertOne = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_clientIdInsertOne_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('clientIdInsertOne failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.clientIdGetOne = function(query, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_clientIdGetOne(query);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_clientIdGetOne(query);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_clientIdGetOne = function(query) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('clientIdGetOne', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_clientIdGetOne_args();
  args.query = query;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_clientIdGetOne = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_clientIdGetOne_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('clientIdGetOne failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.accessTokenInsertOne = function(form, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_accessTokenInsertOne(form);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_accessTokenInsertOne(form);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_accessTokenInsertOne = function(form) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('accessTokenInsertOne', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_accessTokenInsertOne_args();
  args.form = form;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_accessTokenInsertOne = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_accessTokenInsertOne_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('accessTokenInsertOne failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.accessTokenUpdateOne = function(form, query, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_accessTokenUpdateOne(form, query);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_accessTokenUpdateOne(form, query);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_accessTokenUpdateOne = function(form, query) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('accessTokenUpdateOne', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_accessTokenUpdateOne_args();
  args.form = form;
  args.query = query;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_accessTokenUpdateOne = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_accessTokenUpdateOne_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('accessTokenUpdateOne failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.accessTokenUpsertOne = function(form, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_accessTokenUpsertOne(form);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_accessTokenUpsertOne(form);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_accessTokenUpsertOne = function(form) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('accessTokenUpsertOne', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_accessTokenUpsertOne_args();
  args.form = form;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_accessTokenUpsertOne = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_accessTokenUpsertOne_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('accessTokenUpsertOne failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.accessTokenGetOne = function(query, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_accessTokenGetOne(query);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_accessTokenGetOne(query);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_accessTokenGetOne = function(query) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('accessTokenGetOne', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_accessTokenGetOne_args();
  args.query = query;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_accessTokenGetOne = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_accessTokenGetOne_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('accessTokenGetOne failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.accessTokenDeleteOne = function(query, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_accessTokenDeleteOne(query);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_accessTokenDeleteOne(query);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_accessTokenDeleteOne = function(query) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('accessTokenDeleteOne', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_accessTokenDeleteOne_args();
  args.query = query;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_accessTokenDeleteOne = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_accessTokenDeleteOne_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('accessTokenDeleteOne failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.accessTokenDeleteMany = function(query, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_accessTokenDeleteMany(query);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_accessTokenDeleteMany(query);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_accessTokenDeleteMany = function(query) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('accessTokenDeleteMany', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_accessTokenDeleteMany_args();
  args.query = query;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_accessTokenDeleteMany = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_accessTokenDeleteMany_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('accessTokenDeleteMany failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.customerInsertOne = function(form, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_customerInsertOne(form);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_customerInsertOne(form);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_customerInsertOne = function(form) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('customerInsertOne', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_customerInsertOne_args();
  args.form = form;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_customerInsertOne = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_customerInsertOne_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('customerInsertOne failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.customerGetOneByPk = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_customerGetOneByPk(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_customerGetOneByPk(userId);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_customerGetOneByPk = function(userId) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('customerGetOneByPk', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_customerGetOneByPk_args();
  args.userId = userId;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_customerGetOneByPk = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_customerGetOneByPk_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('customerGetOneByPk failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.customerGetOneRelationByPk = function(userId, options, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_customerGetOneRelationByPk(userId, options);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_customerGetOneRelationByPk(userId, options);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_customerGetOneRelationByPk = function(userId, options) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('customerGetOneRelationByPk', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_customerGetOneRelationByPk_args();
  args.userId = userId;
  args.options = options;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_customerGetOneRelationByPk = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_customerGetOneRelationByPk_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('customerGetOneRelationByPk failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.customerGetOneByEmail = function(email, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_customerGetOneByEmail(email);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_customerGetOneByEmail(email);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_customerGetOneByEmail = function(email) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('customerGetOneByEmail', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_customerGetOneByEmail_args();
  args.email = email;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_customerGetOneByEmail = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_customerGetOneByEmail_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('customerGetOneByEmail failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.customerChangePassword = function(uid, password, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_customerChangePassword(uid, password);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_customerChangePassword(uid, password);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_customerChangePassword = function(uid, password) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('customerChangePassword', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_customerChangePassword_args();
  args.uid = uid;
  args.password = password;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_customerChangePassword = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_customerChangePassword_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('customerChangePassword failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.customerAddressInsertOne = function(form, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_customerAddressInsertOne(form);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_customerAddressInsertOne(form);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_customerAddressInsertOne = function(form) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('customerAddressInsertOne', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_customerAddressInsertOne_args();
  args.form = form;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_customerAddressInsertOne = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_customerAddressInsertOne_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('customerAddressInsertOne failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.countryGetAll = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_countryGetAll();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_countryGetAll();
  }
};

vv.service.VIVUDataServiceClient.prototype.send_countryGetAll = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('countryGetAll', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_countryGetAll_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_countryGetAll = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_countryGetAll_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('countryGetAll failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.countryGetOneByCountryCode = function(countryCode, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_countryGetOneByCountryCode(countryCode);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_countryGetOneByCountryCode(countryCode);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_countryGetOneByCountryCode = function(countryCode) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('countryGetOneByCountryCode', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_countryGetOneByCountryCode_args();
  args.countryCode = countryCode;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_countryGetOneByCountryCode = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_countryGetOneByCountryCode_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('countryGetOneByCountryCode failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.countryGetOne = function(countryCode, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_countryGetOne(countryCode);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_countryGetOne(countryCode);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_countryGetOne = function(countryCode) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('countryGetOne', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_countryGetOne_args();
  args.countryCode = countryCode;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_countryGetOne = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_countryGetOne_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('countryGetOne failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.productFilterPagination = function(filter, query, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_productFilterPagination(filter, query);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_productFilterPagination(filter, query);
  }
};

vv.service.VIVUDataServiceClient.prototype.send_productFilterPagination = function(filter, query) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('productFilterPagination', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_productFilterPagination_args();
  args.filter = filter;
  args.query = query;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_productFilterPagination = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_productFilterPagination_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('productFilterPagination failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.categoryGroupGetAllActive = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_categoryGroupGetAllActive();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_categoryGroupGetAllActive();
  }
};

vv.service.VIVUDataServiceClient.prototype.send_categoryGroupGetAllActive = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('categoryGroupGetAllActive', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_categoryGroupGetAllActive_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_categoryGroupGetAllActive = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_categoryGroupGetAllActive_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('categoryGroupGetAllActive failed: unknown result');
};
vv.service.VIVUDataServiceClient.prototype.categoryGetAllActive = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_categoryGetAllActive();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_categoryGetAllActive();
  }
};

vv.service.VIVUDataServiceClient.prototype.send_categoryGetAllActive = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('categoryGetAllActive', Thrift.MessageType.CALL, this.seqid());
  var args = new vv.service.VIVUDataService_categoryGetAllActive_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

vv.service.VIVUDataServiceClient.prototype.recv_categoryGetAllActive = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new vv.service.VIVUDataService_categoryGetAllActive_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('categoryGetAllActive failed: unknown result');
};
vv.service.VIVUDataServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
vv.service.VIVUDataServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_commonGenerateUid = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_commonGenerateUid_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.commonGenerateUid.length === 0) {
    Q.fcall(this._handler.commonGenerateUid)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_commonGenerateUid_result({success: result});
        output.writeMessageBegin("commonGenerateUid", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_commonGenerateUid_result(err);
          output.writeMessageBegin("commonGenerateUid", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("commonGenerateUid", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.commonGenerateUid(function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_commonGenerateUid_result((err != null ? err : {success: result}));
        output.writeMessageBegin("commonGenerateUid", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("commonGenerateUid", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_clientIdInsertOne = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_clientIdInsertOne_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.clientIdInsertOne.length === 1) {
    Q.fcall(this._handler.clientIdInsertOne, args.model)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_clientIdInsertOne_result({success: result});
        output.writeMessageBegin("clientIdInsertOne", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_clientIdInsertOne_result(err);
          output.writeMessageBegin("clientIdInsertOne", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("clientIdInsertOne", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.clientIdInsertOne(args.model, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_clientIdInsertOne_result((err != null ? err : {success: result}));
        output.writeMessageBegin("clientIdInsertOne", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("clientIdInsertOne", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_clientIdGetOne = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_clientIdGetOne_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.clientIdGetOne.length === 1) {
    Q.fcall(this._handler.clientIdGetOne, args.query)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_clientIdGetOne_result({success: result});
        output.writeMessageBegin("clientIdGetOne", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_clientIdGetOne_result(err);
          output.writeMessageBegin("clientIdGetOne", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("clientIdGetOne", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.clientIdGetOne(args.query, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_clientIdGetOne_result((err != null ? err : {success: result}));
        output.writeMessageBegin("clientIdGetOne", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("clientIdGetOne", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_accessTokenInsertOne = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_accessTokenInsertOne_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.accessTokenInsertOne.length === 1) {
    Q.fcall(this._handler.accessTokenInsertOne, args.form)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_accessTokenInsertOne_result({success: result});
        output.writeMessageBegin("accessTokenInsertOne", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_accessTokenInsertOne_result(err);
          output.writeMessageBegin("accessTokenInsertOne", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("accessTokenInsertOne", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.accessTokenInsertOne(args.form, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_accessTokenInsertOne_result((err != null ? err : {success: result}));
        output.writeMessageBegin("accessTokenInsertOne", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("accessTokenInsertOne", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_accessTokenUpdateOne = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_accessTokenUpdateOne_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.accessTokenUpdateOne.length === 2) {
    Q.fcall(this._handler.accessTokenUpdateOne, args.form, args.query)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_accessTokenUpdateOne_result({success: result});
        output.writeMessageBegin("accessTokenUpdateOne", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_accessTokenUpdateOne_result(err);
          output.writeMessageBegin("accessTokenUpdateOne", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("accessTokenUpdateOne", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.accessTokenUpdateOne(args.form, args.query, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_accessTokenUpdateOne_result((err != null ? err : {success: result}));
        output.writeMessageBegin("accessTokenUpdateOne", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("accessTokenUpdateOne", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_accessTokenUpsertOne = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_accessTokenUpsertOne_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.accessTokenUpsertOne.length === 1) {
    Q.fcall(this._handler.accessTokenUpsertOne, args.form)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_accessTokenUpsertOne_result({success: result});
        output.writeMessageBegin("accessTokenUpsertOne", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_accessTokenUpsertOne_result(err);
          output.writeMessageBegin("accessTokenUpsertOne", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("accessTokenUpsertOne", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.accessTokenUpsertOne(args.form, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_accessTokenUpsertOne_result((err != null ? err : {success: result}));
        output.writeMessageBegin("accessTokenUpsertOne", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("accessTokenUpsertOne", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_accessTokenGetOne = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_accessTokenGetOne_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.accessTokenGetOne.length === 1) {
    Q.fcall(this._handler.accessTokenGetOne, args.query)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_accessTokenGetOne_result({success: result});
        output.writeMessageBegin("accessTokenGetOne", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_accessTokenGetOne_result(err);
          output.writeMessageBegin("accessTokenGetOne", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("accessTokenGetOne", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.accessTokenGetOne(args.query, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_accessTokenGetOne_result((err != null ? err : {success: result}));
        output.writeMessageBegin("accessTokenGetOne", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("accessTokenGetOne", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_accessTokenDeleteOne = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_accessTokenDeleteOne_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.accessTokenDeleteOne.length === 1) {
    Q.fcall(this._handler.accessTokenDeleteOne, args.query)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_accessTokenDeleteOne_result({success: result});
        output.writeMessageBegin("accessTokenDeleteOne", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_accessTokenDeleteOne_result(err);
          output.writeMessageBegin("accessTokenDeleteOne", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("accessTokenDeleteOne", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.accessTokenDeleteOne(args.query, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_accessTokenDeleteOne_result((err != null ? err : {success: result}));
        output.writeMessageBegin("accessTokenDeleteOne", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("accessTokenDeleteOne", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_accessTokenDeleteMany = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_accessTokenDeleteMany_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.accessTokenDeleteMany.length === 1) {
    Q.fcall(this._handler.accessTokenDeleteMany, args.query)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_accessTokenDeleteMany_result({success: result});
        output.writeMessageBegin("accessTokenDeleteMany", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_accessTokenDeleteMany_result(err);
          output.writeMessageBegin("accessTokenDeleteMany", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("accessTokenDeleteMany", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.accessTokenDeleteMany(args.query, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_accessTokenDeleteMany_result((err != null ? err : {success: result}));
        output.writeMessageBegin("accessTokenDeleteMany", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("accessTokenDeleteMany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_customerInsertOne = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_customerInsertOne_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.customerInsertOne.length === 1) {
    Q.fcall(this._handler.customerInsertOne, args.form)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_customerInsertOne_result({success: result});
        output.writeMessageBegin("customerInsertOne", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_customerInsertOne_result(err);
          output.writeMessageBegin("customerInsertOne", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("customerInsertOne", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.customerInsertOne(args.form, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_customerInsertOne_result((err != null ? err : {success: result}));
        output.writeMessageBegin("customerInsertOne", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("customerInsertOne", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_customerGetOneByPk = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_customerGetOneByPk_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.customerGetOneByPk.length === 1) {
    Q.fcall(this._handler.customerGetOneByPk, args.userId)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_customerGetOneByPk_result({success: result});
        output.writeMessageBegin("customerGetOneByPk", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_customerGetOneByPk_result(err);
          output.writeMessageBegin("customerGetOneByPk", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("customerGetOneByPk", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.customerGetOneByPk(args.userId, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_customerGetOneByPk_result((err != null ? err : {success: result}));
        output.writeMessageBegin("customerGetOneByPk", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("customerGetOneByPk", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_customerGetOneRelationByPk = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_customerGetOneRelationByPk_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.customerGetOneRelationByPk.length === 2) {
    Q.fcall(this._handler.customerGetOneRelationByPk, args.userId, args.options)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_customerGetOneRelationByPk_result({success: result});
        output.writeMessageBegin("customerGetOneRelationByPk", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_customerGetOneRelationByPk_result(err);
          output.writeMessageBegin("customerGetOneRelationByPk", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("customerGetOneRelationByPk", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.customerGetOneRelationByPk(args.userId, args.options, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_customerGetOneRelationByPk_result((err != null ? err : {success: result}));
        output.writeMessageBegin("customerGetOneRelationByPk", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("customerGetOneRelationByPk", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_customerGetOneByEmail = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_customerGetOneByEmail_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.customerGetOneByEmail.length === 1) {
    Q.fcall(this._handler.customerGetOneByEmail, args.email)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_customerGetOneByEmail_result({success: result});
        output.writeMessageBegin("customerGetOneByEmail", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_customerGetOneByEmail_result(err);
          output.writeMessageBegin("customerGetOneByEmail", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("customerGetOneByEmail", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.customerGetOneByEmail(args.email, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_customerGetOneByEmail_result((err != null ? err : {success: result}));
        output.writeMessageBegin("customerGetOneByEmail", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("customerGetOneByEmail", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_customerChangePassword = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_customerChangePassword_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.customerChangePassword.length === 2) {
    Q.fcall(this._handler.customerChangePassword, args.uid, args.password)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_customerChangePassword_result({success: result});
        output.writeMessageBegin("customerChangePassword", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_customerChangePassword_result(err);
          output.writeMessageBegin("customerChangePassword", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("customerChangePassword", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.customerChangePassword(args.uid, args.password, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_customerChangePassword_result((err != null ? err : {success: result}));
        output.writeMessageBegin("customerChangePassword", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("customerChangePassword", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_customerAddressInsertOne = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_customerAddressInsertOne_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.customerAddressInsertOne.length === 1) {
    Q.fcall(this._handler.customerAddressInsertOne, args.form)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_customerAddressInsertOne_result({success: result});
        output.writeMessageBegin("customerAddressInsertOne", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_customerAddressInsertOne_result(err);
          output.writeMessageBegin("customerAddressInsertOne", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("customerAddressInsertOne", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.customerAddressInsertOne(args.form, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_customerAddressInsertOne_result((err != null ? err : {success: result}));
        output.writeMessageBegin("customerAddressInsertOne", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("customerAddressInsertOne", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_countryGetAll = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_countryGetAll_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.countryGetAll.length === 0) {
    Q.fcall(this._handler.countryGetAll)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_countryGetAll_result({success: result});
        output.writeMessageBegin("countryGetAll", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_countryGetAll_result(err);
          output.writeMessageBegin("countryGetAll", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("countryGetAll", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.countryGetAll(function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_countryGetAll_result((err != null ? err : {success: result}));
        output.writeMessageBegin("countryGetAll", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("countryGetAll", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_countryGetOneByCountryCode = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_countryGetOneByCountryCode_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.countryGetOneByCountryCode.length === 1) {
    Q.fcall(this._handler.countryGetOneByCountryCode, args.countryCode)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_countryGetOneByCountryCode_result({success: result});
        output.writeMessageBegin("countryGetOneByCountryCode", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_countryGetOneByCountryCode_result(err);
          output.writeMessageBegin("countryGetOneByCountryCode", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("countryGetOneByCountryCode", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.countryGetOneByCountryCode(args.countryCode, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_countryGetOneByCountryCode_result((err != null ? err : {success: result}));
        output.writeMessageBegin("countryGetOneByCountryCode", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("countryGetOneByCountryCode", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_countryGetOne = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_countryGetOne_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.countryGetOne.length === 1) {
    Q.fcall(this._handler.countryGetOne, args.countryCode)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_countryGetOne_result({success: result});
        output.writeMessageBegin("countryGetOne", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_countryGetOne_result(err);
          output.writeMessageBegin("countryGetOne", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("countryGetOne", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.countryGetOne(args.countryCode, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_countryGetOne_result((err != null ? err : {success: result}));
        output.writeMessageBegin("countryGetOne", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("countryGetOne", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_productFilterPagination = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_productFilterPagination_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.productFilterPagination.length === 2) {
    Q.fcall(this._handler.productFilterPagination, args.filter, args.query)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_productFilterPagination_result({success: result});
        output.writeMessageBegin("productFilterPagination", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_productFilterPagination_result(err);
          output.writeMessageBegin("productFilterPagination", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("productFilterPagination", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.productFilterPagination(args.filter, args.query, function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_productFilterPagination_result((err != null ? err : {success: result}));
        output.writeMessageBegin("productFilterPagination", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("productFilterPagination", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_categoryGroupGetAllActive = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_categoryGroupGetAllActive_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.categoryGroupGetAllActive.length === 0) {
    Q.fcall(this._handler.categoryGroupGetAllActive)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_categoryGroupGetAllActive_result({success: result});
        output.writeMessageBegin("categoryGroupGetAllActive", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_categoryGroupGetAllActive_result(err);
          output.writeMessageBegin("categoryGroupGetAllActive", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("categoryGroupGetAllActive", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.categoryGroupGetAllActive(function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_categoryGroupGetAllActive_result((err != null ? err : {success: result}));
        output.writeMessageBegin("categoryGroupGetAllActive", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("categoryGroupGetAllActive", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

vv.service.VIVUDataServiceProcessor.prototype.process_categoryGetAllActive = function(seqid, input, output) {
  var args = new vv.service.VIVUDataService_categoryGetAllActive_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.categoryGetAllActive.length === 0) {
    Q.fcall(this._handler.categoryGetAllActive)
      .then(function(result) {
        var result = new vv.service.VIVUDataService_categoryGetAllActive_result({success: result});
        output.writeMessageBegin("categoryGetAllActive", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof exception_ttypes.DBExceptions) {
          var result = new vv.service.VIVUDataService_categoryGetAllActive_result(err);
          output.writeMessageBegin("categoryGetAllActive", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("categoryGetAllActive", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.categoryGetAllActive(function (err, result) {
      if (err == null || err instanceof exception_ttypes.DBExceptions) {
        var result = new vv.service.VIVUDataService_categoryGetAllActive_result((err != null ? err : {success: result}));
        output.writeMessageBegin("categoryGetAllActive", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("categoryGetAllActive", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

